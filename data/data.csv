project,link,Plain Description,Video,Website,File Url,sponsors,Mlh Points,Mlh Hardware Lab,Submitter Screen Name,Team Member 1 Screen Name,...,
Channel Stats,http://sdhacks2016.devpost.com/submissions/58173-channel-stats,"Displays two Twitch channels side by side, for when you wanted to watch two channels at once. Two Twitch Bots are present, one in each channel, scraping data and counting it up and performing a side-by-side data comparison of the two channels, allowing one to compare the differences in memes, popularity, and activity between different games, as well as different channels. ",,http://channelstats.herokuapp.com/,https://s3.amazonaws.com/challengepost/zip_files/production/19863/zip_files/Twitch.zip,Twitch Moderation Challenge,UC San Diego,,chenboy3,,,
HoloComm,http://sdhacks2016.devpost.com/submissions/58187-holocomm,"InspirationAs Generation 0 and Generation 1 immigrants ourselves, we all come from multilingual backgrounds.  English fluency is a critical skill for success and assimilation in our society, we wanted to use some of the most exciting trends in industry - VR and IoT - in this space for maximum impact.What it doesHoloComm is a real time translator.  Users enjoy the following features:Visual output (on Hololens) of surrounding English audio translated into user's preferred languageVisual output (on Hololens) of English text in field of view translated into user's preferred languageObject recognition and labeling in EnglishHoloComm is also able to interact with our IoT avatar, Pikachu.  The object recognition feature recognizes Pikachu as the avatar and the the user is able to initiate conversation.  Pikachu, empowered by api.ai's natural language processing framework responds in conversational English.  The entire conversation is tracked by the user using the same visual output on the Hololens as before and is transcribed to the user's email using SparkPost.  Pikachu is meant to serve as an educational aide for users to practice their English at leisure.How we built itLots of love <3 Many different technologies come into play here.  The majority of code is in C# to interface with the Hololens. connecting to hardware occurs over a Firebase database which triggers Python running on a Arduino.Challenges we ran intoStoring and processing snapshots of the visual field of Hololens to perform OCR and Object Recognition.  Currently, the images are being pushed up to imgur with Microsoft Cognitive Services analysis subsequently.Accomplishments that we're proud ofBuilding a complete user experience with rich interactivity.What we learnedHow to build a user interface in Unity for the Hololens.  How to develop natively in C# for functionality usually accomplished in Node.js.What's next for HoloCommMore features! An immediate addition is a gamified extension to object recognition which asks the user to identify certain objects with Pikachu as prompter.",,https://github.com/sampurnabasu/HoloComm,,"SparkPost, 1517 fund, Most Entrepreneurially Promising Hack, Best Internet of Things Hack",University of Southern California,,Sampurna,sagar7p,MakePLAN,ziran
HackFinder,http://sdhacks2016.devpost.com/submissions/58245-hackfinder,"InspirationWe go to a lot of hackathons, typically we drive but on occasion we've flown. We wanted a tool that optimized our decision making process when getting to and from hackathons. What it doesIt's a tool to streamline deciding on travel options to the lastest hackathons and optimizing your reimbursement. How we built itWe used Google's, Uber's, Lyft's and Mapbox's APIs to determine routes that are as efficient as possible.  Challenges we ran intoGetting all the APIs in synch. Accomplishments that we're proud ofWe are really proud of our design, we wanted to have a really strong UI and great UX. What we learnedWe learned how to efficiently used transitions while optimizing data transfer to the user. What's next for HackFinderAlthough we are focusing on hackathons for now, we eventually plan on expanding HackFinder into a full-fledged travel app considering the modern person's travel options (because options like Uber and Lyft aren't typically considered).",,,,"1517 fund, 1517 fund, Hack that Best Connects Us, Most Entrepreneurially Promising Hack",UC Merced,,dhalili,4shub,Totalizor,jonathanmoran
CARM,http://sdhacks2016.devpost.com/submissions/58249-carm,"InspirationWe wanted to allow people on the same website to connect and talk with each otherHow we built itWe built an extension for Chrome using Javascript. The chat is accomplished using the MQTT protocolChallenges we ran intoAccomplishments that we're proud ofWhat we learnedWhat's next for CARM",,https://github.com/vanshg/CARM,,"1 TB Hard Drives, Hack that Best Connects Us",UCLA,,vanshgandhi,sahilmgandhi,,
Designated Driver,http://sdhacks2016.devpost.com/submissions/58251-designated-driver,"In the era of Big Data, we struggle to comprehend the scope of the statistics we have. We know thousands of people are killed by drunk driving, but unless someone is in that situation it‰Ûªs impossible to really understand the psychological impact.Our SDHacks project is the solution to put a human experience to the numbers. We‰Ûªve created a simulation where the viewer is literally experiencing drunk driving, vision blurred by intoxication, alcohol in hand. Using the full immersion the HTC Vive offers, viewers can watch the consequences of reckless actions, eventually ending up in a jail cell surrounded by statistics of drunk driving fatalities. Coding for Vive was challenging as it‰Ûªs so new, especially as the camerawork of driving an erratic car required careful camera positioning. Most of our team was new to working in Unity as well, but we quickly adapted to the robust engine. We are most proud of how we were able to put so many unconnected elements together in under a day and to have them fit nearly seamlessly. We‰Ûªve learned how to integrate team member‰Ûªs codes and unique skills together to make one cohesive project.  We plan to continue developing it, focusing on heightening the realism of the experience and offering different levels of intoxication in the simulation.Our simulation is a first step in the intermingling of VR and Data Visualization, having the experience give weight to the data and the data influencing the experience.  ",,https://github.com/nicholascrow/JEMNCDataVisualization,,"1517 fund, Hack that Best Connects Us, Most Entrepreneurially Promising Hack, Best Internet of Things Hack, SPAWAR","UC San Diego, UC Berkeley",Alienware Laptop,easonychang,,,
TopTwitchText,http://sdhacks2016.devpost.com/submissions/58254-toptwitchtext,"InspirationSometimes a streamer wants the chat's opinions on whether to play one game or the other. Other times a streamer wants to know what viewers want them to do next in a game. While polling exists, this is a quicker way to get a sense of what the viewers want without calling for an explicit poll. Also, regular viewers can see what messages are dominating the chat. Kappa.What it doesUpon opening the file, you can specify which channel you wish to connect to. After connecting, you will immediately see the leaderboard for messages since you joined. You can disconnect and change channels at any time.How we built itWe used the example chatbot provided as a base and added the logic we needed for our bot.Challenges we ran intoWe spent a lot of time thinking about optimization of the algorithms we planned to use.Accomplishments that we're proud ofWe didn't actually expect to make something coming into this hackathon, so we're super excited that it is a working product :)What we learnedWe learned a lot about how Javascript works and how to weigh tradeoffs between different designs. What's next for TopTwitchTextWe want to improve on the user experience of using the bot. We also want to port this to a web app that uses Node.JS since it's currently just a static file.",https://youtu.be/ntd56P_2rnA,https://github.com/jhuang285/sdhacks_2016,,Twitch Moderation Challenge,UCSD,,jhuang285,Sokunev,,
kappapastabot,http://sdhacks2016.devpost.com/submissions/58259-kappapastabot,"kappapastabotA Twitch chat bot to send popular copy pastas when prompted with commands. Built at SD Hacks 2016.How to Use  Type [!copypasta] in Twitch chat without the brackets to have a bot output a random copypasta.  Type [!copypasta streamername] in Twitch chat to get a copypasta specific to a certain streamer.  Type [!copypasta help] in Twitch chat to get a list of streamers that are supported.CreatorsJason Baohttps://github.com/jabaoJeremiah Fanhttps://github.com/jeremiah-fan",,https://github.com/jeremiah-fan/kappapastabot,,Twitch Moderation Challenge,"UCSD, UCLA",,jeremiah-fan,jabao,,
kappapastabot,http://sdhacks2016.devpost.com/submissions/58260-kappapastabot,"kappapastabotA Twitch chat bot to send popular copy pastas when prompted with commands. Built at SD Hacks 2016.How to Use  Type [!copypasta] in Twitch chat without the brackets to have a bot output a random copypasta.  Type [!copypasta streamername] in Twitch chat to get a copypasta specific to a certain streamer.  Type [!copypasta help] in Twitch chat to get a list of streamers that are supported.CreatorsJason Baohttps://github.com/jabaoJeremiah Fanhttps://github.com/jeremiah-fan",,https://github.com/jeremiah-fan/kappapastabot,,Twitch Moderation Challenge,"UCSD, UCLA",,jabao,jeremiah-fan,,
EduBot,http://sdhacks2016.devpost.com/submissions/58280-edubot,"EduBotDecription: EduBot, the Twitch chat bot that allows you to create polls, translate sentences, look up math problems on Wolfram Alpha, and play Tic Tac Toe! Mention Trump, Hillary, or Johnson and experience a mini easter egg. Access FB/Instagram/website links through the respective commands. Say hi or hello and you will get a happy response in return. Every 5 minutes, EduBot will let you know the most frequently used words and commands.PollingWant to start a poll to see what everyone thinks about a question? With EduBot, you surely can!Type: !poll [Question ending in '?'] [AnswerChoice1] [AnswerChoice2] [AnswerChoice3] [...](Ex: !poll Who will win the presidential election? Trump Hillary Johnson)Once a poll is up and open, users can type out their answer choice in the chat to cast their vote.Type: !resultsFor the current results of the poll.Type: !killTo shut down polling for the current question.Google TranslateEver had a bot that could translate sentences for you? No? EduBot does it using Google's amazing API.Type: !translate [fromLanguage] [toLanguage] [Sentence/word to translate]Ex: !translate en fr I love Cats!Languages are named by their ""codes"", some examples are en (English), es (Spanish), and fr (French). Please visit the link below for guidance.Link: https://sites.google.com/site/tomihasa/google-language-codesWolfram AlphaEver watch a stream, talk to your friends in chat, and do your homework? With EduBot, you can do all three in one Twitch window.With the help of Wolfram Alpha's API, EduBot will help you solve your math problems, vocab questions, and physics exams with ease.Type: !wolfram [problem you want help solving]Ex: !wolfram derivative of (x^5)Social MediaObtain more information about me by using the following commands:!facebook  => Gives a link to my Facebook!instagram => Gives a link to my Instagram!website   => Gives a link to my personal websitePlay TicTacToeYou probably knew of a bot before that let you play small games, but did it let you play a full game of 3x3 Tic Tac Toe? EduBot allows this!Type: !tictactoeTo begin a new tic tac toe game. For this type of game, any type of Char can be used, not just X and O but please keep it to only two; anyone can play who is in chat.Type: !play [charToUse] [row] [col]Ex: !play X 0 0 => Places an X at the top left hand corner of the boardTo place your char at a specific row and column location. Both row and col is 0-indexed.The game will end when a player makes 3 in a row in any direction: horizontal, vertical, and both diagonals or if the game ends in a DRAW.AnnouncementsEvery 5 minutes (a minute count that is divisible by 5), EduBot will announce the top 3 most frequent words and commands used while being alive in the Twitch chat channel. This was going to be used for machine learning/AI algorithms to further interact with users, but it would've taken longer than the allotted time given for SD Hacks.DocuSignDoesn't have any functionality in this app as of right now but it is in the works. Wanted to use DocuSign for any formal agreements between Twitch chat users, most likely in the realm of tutoring services (given its name of EduBot), which I wanted to implement.Easter EggsMention Trump, Hillary, or Johnson and receive a popular quote that was said by them during this election season.Say hi or hello to EduBot and you'll receive a friendly ""Hey there!"" back. Nothing wrong with being nice. :)DevelopersLucas MarzoccoAPIs UsedGoogle Translate, Wolfram Alpha, Twitch ChatLast updated: 10/2/2016 3:38 AM",,https://github.com/lucasmarzocco/EduBot,,"Twitch Moderation Challenge, Hack that Best Connects Us",UCSD,,lucasmarzocco,,,
Phouse,http://sdhacks2016.devpost.com/submissions/58298-phouse,"Inspiration3Dconnexion SpaceMouse Pro Wireless - 3D mouse, but who wants to pay 300 dollars for such a mouse? Phouse (Phone mouse) is an alternative that gives users a unique mousing experience for free.What it doesConnects to computer over wifi as a mouse. What separates this from many of the other Android mouses currently out there is the usage of the accelerometer integrated into Android devices as a form of mouse movement. It also provides clicking functionality and has potential to include keyboard inputs in the future.How I built itAndroid Studio, Eclipse, and my smartphone. Challenges I ran intoSetting up the sockets/server/client caused a couple issues, especially since I ended up making it mostly a one-way connection. Accomplishments that I'm proud ofIt's a pretty cool idea and really the first time I have used Android applications for anything beyond a really basic app.What I learnedFor me, it was an exploration into the realm of User Experience and Human-Computer Interaction. I definitely had a lot of fun implementing it and picked up some practical Android/Java knowledge at the same time.What's next for PhousePhouse could benefit from more features, keyboard macros/mappings, and additional screens.",https://www.youtube.com/watch?v=5hvhr26a_fo,https://github.com/ThisChessPlayer/Phouse,https://s3.amazonaws.com/challengepost/zip_files/production/19900/zip_files/phouseSubmission.zip,"Hack that Best Connects Us, Most Entrepreneurially Promising Hack, General Atomics, Best Internet of Things Hack",University of California: San Diego,,ThisChessPlayer,,,
Fit Head,http://sdhacks2016.devpost.com/submissions/58300-fit-head,"InspirationMany virtual reality games of today are controlled using limiting control schemes which only allow players to walk around or teleport using the controllers. The goal of our game was to implement a virtual reality game which would require full body movement. The result was a very entertaining fitness/score chaser game which requires full participation and immersion from the player. What it doesIt is a fitness game where you dodge incoming blocks in a virtual reality space using an HTC Vive. How we built itWe built this game using an HTC Vive and the Unity game engine. Challenges we ran intoThe biggest challenge we ran into was depicting the blocks moving at the player in such a way that anyone could perceive its motion easily. Many early testers said that they thought the blocks were directly chasing them or that they couldn't tell how close the blocks were. As such we made it so the blocks changed from green to red as they came closer. Accomplishments that we're proud ofWe are proud of creating a unique virtual reality experience which stands out greatly from other VR games due to its extensive movement controls.What we learnedWe learned how to use an HTC Vive in game development. We also sharpened our skills with co-routines in Unity. What's next for Fit HeadMore game modes, features, and a full release. We could also potentially theme our game into a specific training simulator such as for Navy aircraft carrier safety. ",,,https://s3.amazonaws.com/challengepost/zip_files/production/19902/zip_files/FitHead1.0.zip,SPAWAR,"University of California, Riverside",,rhale002,crodr027,cprib001,
Megadeath Freedom Falcon Fighter III,http://sdhacks2016.devpost.com/submissions/58302-megadeath-freedom-falcon-fighter-iii,"InspirationWe all wanted to work with VR and we thought that this would be a great application for education via VR.What it doesThe user sits down in an airplane cockpit and they can point at any button/lever/dial etc. and find out what it is. They also can undertake a tutorial in which they learn how to start the plane.How I built itUses Unity and HTC Vive.Challenges I ran intoGetting the switches to pivot properly. Pivots were organized on the wrong edge when we downloaded our open source cockpit. Thanks Obama.Making the text stable. One of the hardest parts of our project were getting the user to read the text while simultaneously touching the controls.Accomplishments that I'm proud ofThis was all of our first times doing VR with Unity, so we are proud to we were able to finish a complete application. Thanks Obama.What I learnedWe learned a lot about game development and VR game design. I also learnt C# and basic game engine structure to achieve concurrent processes and rendering.What's next for MegaDeath Freedom Falcon Fighter IIIWe are thinking about implementing an interactive tutorial that lights up the buttons needed to press in order to start a plane liftoff sequence.",,https://github.com/Sachte/SDHacks.git,,SPAWAR,"UCSD, UC Berkeley",Samsung Gear VR,Sachte,harryho,winnielinnie,
StadiumBot,http://sdhacks2016.devpost.com/submissions/58303-stadiumbot,"InspirationWe wanted to create content for twitch chat that was interactive and user centric, and we thought the best way to do this would be to create a chat bot that directly interacts with members of the chat. We also wanted to emulate the atmosphere of large sporting events through our bot. Twitch streams are often E-Sport streams, and all sports deserve a little hype and crowd ineteraction! StadiumBot sets out to create a fun stadium-like environment right in the streamer's chat.What it doesStadiumBot listens and responds to chatters. It provides them with various stadium-like activities such as ordering food, performing a wave, and even being featured on a kiss-cam! This turns an ordinary stream into a chaotic arena of fans.How we built itWe build StadiumBot using node.js and a third party twitch chat API called tmi.js.Challenges we ran intoOur biggest challenge was coming up with an idea for the hackathon. Eventually, we settled on StadiumBot because it was feasible, lighthearted, and would ultimately make the twitch environment more exciting.Accomplishments that we're proud ofWe are proud of having a finished project!What we learnedWe learned a lot about the twitch platform and how chat works.What's next for StadiumBotThere are a few kinks that need to be ironed out, but the possibilities for additional features that could be added to the bot are endless.",,https://github.com/streddy/twitch-stadiumbot/,,,UCSD,,streddy,,,